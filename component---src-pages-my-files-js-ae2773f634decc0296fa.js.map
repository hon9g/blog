{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./src/components/Footer.jsx","webpack:///./src/components/Layout.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["data","allFile","edges","map","idx","node","key","relativePath","prettySize","extension","birthTime","query","userInfo","emoji","Map","prefix","fadeIn","keyframes","slideIn","buttonStyle","css","render","user","site","siteMetadata","to","role","aria-label","filter","e","i","href","get","target","rel","children","Footer","StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","props","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"6FAAA,mFAIe,sBAAe,IAAZA,EAAW,EAAXA,KACd,OACI,YAAC,IAAD,KACI,uBACI,yCACA,yBACI,yBACI,sBACI,sCACA,oCACA,mCACA,qCAGR,yBACKA,EAAKC,QAAQC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACpB,kBAAIC,IAAKF,GACL,sBAAKC,EAAKE,cACV,sBAAKF,EAAKG,YACV,sBAAKH,EAAKI,WACV,sBAAKJ,EAAKK,oBAUnC,IAAMC,EAAK,c,qjBC9BlB,IAAMC,EAAW,CAAC,SAAU,SACtBC,EAAQ,IAAIC,IAAI,CAAC,CAAC,SAAU,MAAO,CAAC,QAAS,QAC7CC,EAAS,IAAID,IAAI,CAAC,CAAC,SAAU,uBAAwB,CAAC,QAAS,aAE/DE,EAASC,YAAH,KAeNC,EAAUD,YAAH,KASPE,EAAcC,YAAH,0KAaAJ,EAbA,sCAgBAE,EAhBA,c,0HAoBF,oBACb,YAAC,IAAD,CACEP,MAAK,aAYLU,OAAQ,gBAAwBC,EAAxB,EAAEC,KAAOC,aAAeF,KAAxB,OACJ,sBACEF,IAAG,GAKH,mBACEA,IAAG,GAKH,YAAC,IAAD,CAAMK,GAAI,IAAKL,IAAKD,GAChB,oBAAMO,KAAK,MAAMC,aAAW,cAA5B,MACA,gCAEHf,EAASgB,QAAO,SAAAC,GAAC,OAAIP,EAAKO,MAAI1B,KAAI,SAAC0B,EAAGC,GAAJ,OACjC,iBAAGxB,IAAKwB,EAAGC,KAAI,GAAKhB,EAAOiB,IAAIH,GAAKP,EAAKO,GAAMI,OAAO,SAASC,IAAI,sBAAsBd,IAAKD,GAC5F,oBAAMO,KAAK,MAAMC,aAAeE,EAAf,UAA2BhB,EAAMmB,IAAIH,IACtD,uBAAMA,UAjCpB,U,wOChDa,oBAAEM,EAAF,EAAEA,SAAF,OACb,mBACEf,IAAG,GAUH,mBAAKA,IAAG,GACLe,GAEH,mBAAKf,IAAG,GACN,YAACgB,EAAD,U,kCCrBN,0JAgBMC,GAFmBC,UAAOC,QAELC,IAAMC,cAAc,KAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiB3C,EAAuB,EAAvBA,KAAMW,EAAiB,EAAjBA,MAAOU,EAAU,EAAVA,OACzDuB,EAAY5C,EACdA,EAAKA,KACL2C,EAAgBhC,IAAUgC,EAAgBhC,GAAOX,KAErD,OACE,YAAC,IAAM6C,SAAP,KACGD,GAAavB,EAAOuB,IACnBA,GAAa,iDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpB/C,EAAkC+C,EAAlC/C,KAAMW,EAA4BoC,EAA5BpC,MAAOU,EAAqB0B,EAArB1B,OAAQc,EAAaY,EAAbZ,SAE7B,OACE,YAACE,EAAmBW,SAApB,MACG,SAAAL,GAAe,OACd,YAACD,EAAD,CACE1C,KAAMA,EACNW,MAAOA,EACPU,OAAQA,GAAUc,EAClBQ,gBAAiBA,S,qBCzC3B,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,4MCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEhB,IAAMiB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-my-files-js-ae2773f634decc0296fa.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nexport default ({ data }) => {\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h1>My Site's Files</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>relativePath</th>\r\n                            <th>prettySize</th>\r\n                            <th>extension</th>\r\n                            <th>birthTime</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.allFile.edges.map(({ node }, idx) => (\r\n                            <tr key={idx}>\r\n                                <td>{node.relativePath}</td>\r\n                                <td>{node.prettySize}</td>\r\n                                <td>{node.extension}</td>\r\n                                <td>{node.birthTime}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    {\r\n        allFile {\r\n            edges {\r\n                node {\r\n                    relativePath\r\n                    prettySize\r\n                    extension\r\n                    birthTime(fromNow: true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from \"react\"\r\nimport { css, keyframes } from \"@emotion/core\"\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst userInfo = ['github', 'email']\r\nconst emoji = new Map([['github', 'üê±'], ['email', '‚úâÔ∏è']])\r\nconst prefix = new Map([['github', 'https://github.com/'], ['email', 'mailto:']])\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    max-height: 0;\r\n    opacity: 0;\r\n  }\r\n  1% {\r\n    max-height: 0.1rem;\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    max-height: 1.3rem;\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst slideIn = keyframes`\r\n  from {\r\n    transform: translateY(0%);\r\n  }\r\n  to {\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst buttonStyle = css`\r\n  margin: 0.5rem\r\n  display: block;\r\n  height 2rem;\r\n  color: #4c4b56;\r\n  font-weight: bold;\r\n  background-image: none;\r\n  div {\r\n    margin-top: -0.3rem;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n  }\r\n  :hover div {\r\n    animation: ${fadeIn} 1s ease;\r\n  }\r\n  :hover, :active {\r\n    animation: ${slideIn} 1s ease;\r\n  }\r\n`\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query FooterQuery {\r\n        site {\r\n          siteMetadata {\r\n            user {\r\n              email\r\n              github\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={({site: {siteMetadata: {user}}}) => (\r\n        <footer\r\n          css={css`\r\n            width: 100%;\r\n            text-align: center;\r\n          `}\r\n        > \r\n          <div\r\n            css={css`\r\n              display: flex;\r\n              justify-content: center;\r\n            `}\r\n          >\r\n            <Link to={'/'} css={buttonStyle}>\r\n                <span role=\"img\" aria-label=\"go to home\">üè†</span>\r\n                <div>home</div>\r\n            </Link>\r\n            {userInfo.filter(e => user[e]).map((e, i) => (\r\n              <a key={i} href={`${prefix.get(e)}${user[e]}`} target=\"_blank\" rel=\"noopener noreferrer\" css={buttonStyle}>\r\n                <span role=\"img\" aria-label={`${e} emoji`}>{emoji.get(e)}</span>\r\n                <div>{e}</div>\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </footer>\r\n    )}\r\n  />\r\n)","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\n\r\nimport Footer from './Footer'\r\n\r\nexport default ({children}) => (\r\n  <div\r\n    css={css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 auto;\r\n        height: 100vh;\r\n        max-width: 700px;\r\n        padding: 1.5rem 1rem 1rem 1rem;\r\n        color: #4c4b56;\r\n    `}\r\n  >\r\n    <div css={css`flex-grow: 3;`}>\r\n      {children}\r\n    </div>\r\n    <div css={css`flex-grow: 1;`}>\r\n      <Footer />\r\n    </div>\r\n  </div>\r\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}